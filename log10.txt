>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@2c1a2b02;(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))), model.statements.NewBarrierStatement@2c1a2b02]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))), model.statements.NewBarrierStatement@2c1a2b02]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@3bedd5c0;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@3bedd5c0]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@3bedd5c0]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6025a9c7;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6ba57aa3;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6025a9c7]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@6ba57aa3]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6025a9c7]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@6ba57aa3]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7dd67abb]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7dd67abb]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7dc7bfae]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7dc7bfae]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@45c66c75]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@45c66c75]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4f8d41ea]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4f8d41ea]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@a29d670]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@a29d670]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@414ba358]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@414ba358]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4f138b17]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4f138b17]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6f2d69a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6f2d69a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@58fb4845]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@58fb4845]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4392a139]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4392a139]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@50f09b74]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@50f09b74]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6449f2e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6449f2e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4eedf39]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4eedf39]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4ef3c06a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4ef3c06a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@5b422415]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@5b422415]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3d6d6f99]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3d6d6f99]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3b48e2b3]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3b48e2b3]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@5d6af266]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@5d6af266]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@756bd51e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@756bd51e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@5d3fe2e3]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@5d3fe2e3]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1075e9e2]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1075e9e2]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@18d28eaf]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@18d28eaf]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7520c583]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7520c583]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@440c50c6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@440c50c6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@264f7f0c]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@264f7f0c]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@46e89574]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@46e89574]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@475d287f]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@475d287f]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@19d70225]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@19d70225]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@73666576]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@73666576]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7fd8022a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7fd8022a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@542b4398]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@542b4398]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6aeab37a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6aeab37a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@72a1aa44]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@72a1aa44]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@5da2953e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@5da2953e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1c8f1260]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1c8f1260]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3f02250]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3f02250]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2db8f6e9]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2db8f6e9]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@693de89f]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@693de89f]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@33e7e996]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@33e7e996]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@70f4fe5e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@70f4fe5e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@d6489d7]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@d6489d7]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3ca797e2]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3ca797e2]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@143b1ef7]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@143b1ef7]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3351c3e8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@6887e4b6;(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))), model.statements.NewBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))), model.statements.NewBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@20f6ba38;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@20f6ba38]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@20f6ba38]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@72532bb7]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@72532bb7]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6bfc3319]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6bfc3319]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@10ab892e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@10ab892e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@5157fdc]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@5157fdc]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4f138b17]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4f138b17]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7cf651ca]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7cf651ca]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@164d3a91]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@164d3a91]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3cf49268]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3cf49268]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@480f34d0]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@480f34d0]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@37dc8282]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@37dc8282]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@57f595b4]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@57f595b4]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3550b435]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3550b435]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6b03d254]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6b03d254]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@48898b12]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@48898b12]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3f9d2fd3]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3f9d2fd3]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@452392cc]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@452392cc]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@211385a4]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@211385a4]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4e7da8ad]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4e7da8ad]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7cb6bf2a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7cb6bf2a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6c8edb66]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6c8edb66]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@640b238d]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@640b238d]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1282920e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1282920e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2b00ff17]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2b00ff17]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@75055fe]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@75055fe]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4f642bf0]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4f642bf0]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@10e84e58]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@10e84e58]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@5bbc4642]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@5bbc4642]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@61934223]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@61934223]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@787071f3]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@787071f3]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@61276b49]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@61276b49]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@311f78eb]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@311f78eb]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@127e3b2b]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@127e3b2b]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@73ddf9]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@73ddf9]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@594fb41e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@594fb41e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@9708425]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@9708425]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@54fd12d1]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@54fd12d1]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3e36b7f9]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3e36b7f9]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7a7cb84e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7a7cb84e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4166e52e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4166e52e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@cbabfba]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@cbabfba]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@722909a3]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@722909a3]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4a22148b]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4a22148b]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@47b94542]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@47b94542]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@58115313]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@58115313]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@197c3f4d]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@197c3f4d]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@13e9cc45]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@13e9cc45]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c823f3d]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c823f3d]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2ef7412e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2ef7412e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@510eaa66]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@510eaa66]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@27148869]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@27148869]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3ed8423]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3ed8423]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1c4d0e00]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1c4d0e00]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1ea34d4b]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1ea34d4b]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@77d40fa8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@77d40fa8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6553e29b]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6553e29b]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@25d85097]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@25d85097]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@495addfa]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@495addfa]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c0e1653]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c0e1653]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@77a4a170]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@77a4a170]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@74ea7972]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@74ea7972]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6ec0c290]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6ec0c290]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3e9d8c2c]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@3e9d8c2c]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1242c63f]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1242c63f]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4facd755]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4facd755]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@62e9919c]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@62e9919c]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6f7eff64]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6f7eff64]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@17cd6d92]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@17cd6d92]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@bbfaa0e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@bbfaa0e]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@23142536]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@23142536]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@565ded00]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@565ded00]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@61e6f598]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@61e6f598]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4b32641b]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@4b32641b]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1a4d62ed]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1a4d62ed]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@6d833281]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7dd67abb]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@7dd67abb]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@1c368cb9]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@1c368cb9]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@68ed599a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@68ed599a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@50b49163]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@50b49163]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@350c18c0]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@350c18c0]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@414ba358, model.statements.AwaitBarrierStatement@782cfab8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@414ba358, model.statements.AwaitBarrierStatement@782cfab8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@414ba358, model.statements.AwaitBarrierStatement@50754177, model.statements.AwaitBarrierStatement@7308f5be]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@414ba358, model.statements.AwaitBarrierStatement@50754177, model.statements.AwaitBarrierStatement@7308f5be]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@414ba358, model.statements.AwaitBarrierStatement@50754177, model.statements.AwaitBarrierStatement@4867feef, model.statements.AwaitBarrierStatement@482d11dc]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@414ba358, model.statements.AwaitBarrierStatement@50754177, model.statements.AwaitBarrierStatement@4867feef, model.statements.AwaitBarrierStatement@482d11dc]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@414ba358, model.statements.AwaitBarrierStatement@50754177, model.statements.AwaitBarrierStatement@4867feef, model.statements.AwaitBarrierStatement@41a97029, model.statements.AwaitBarrierStatement@4392a139]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@414ba358, model.statements.AwaitBarrierStatement@50754177, model.statements.AwaitBarrierStatement@4867feef, model.statements.AwaitBarrierStatement@41a97029, model.statements.AwaitBarrierStatement@4392a139]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@414ba358, model.statements.AwaitBarrierStatement@50754177, model.statements.AwaitBarrierStatement@4867feef, model.statements.AwaitBarrierStatement@41a97029, model.statements.AwaitBarrierStatement@50f09b74, model.statements.AwaitBarrierStatement@480f34d0]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@414ba358, model.statements.AwaitBarrierStatement@50754177, model.statements.AwaitBarrierStatement@4867feef, model.statements.AwaitBarrierStatement@41a97029, model.statements.AwaitBarrierStatement@50f09b74, model.statements.AwaitBarrierStatement@480f34d0]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@414ba358, model.statements.AwaitBarrierStatement@50754177, model.statements.AwaitBarrierStatement@4867feef, model.statements.AwaitBarrierStatement@41a97029, model.statements.AwaitBarrierStatement@50f09b74, model.statements.AwaitBarrierStatement@37dc8282, model.statements.AwaitBarrierStatement@28ed3bb8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@414ba358, model.statements.AwaitBarrierStatement@50754177, model.statements.AwaitBarrierStatement@4867feef, model.statements.AwaitBarrierStatement@41a97029, model.statements.AwaitBarrierStatement@50f09b74, model.statements.AwaitBarrierStatement@37dc8282, model.statements.AwaitBarrierStatement@28ed3bb8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@1d15b1f2, model.statements.AwaitBarrierStatement@5178660d, model.statements.AwaitBarrierStatement@661a9dad, model.statements.AwaitBarrierStatement@10ab892e, model.statements.AwaitBarrierStatement@414ba358, model.statements.AwaitBarrierStatement@50754177, model.statements.AwaitBarrierStatement@4867feef, model.statements.AwaitBarrierStatement@41a97029, model.statements.AwaitBarrierStatement@50f09b74, model.statements.AwaitBarrierStatement@37dc8282, model.statements.AwaitBarrierStatement@16845409, model.statements.AwaitBarrierStatement@3c16c7c6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.NewBarrierStatement@46f9541c;(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))), model.statements.NewBarrierStatement@46f9541c]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6887e4b6;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6887e4b6]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@2c235214;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@63862892;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@2c235214]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@63862892]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newBarrier(cnt readHeap(v2) );(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))), newBarrier(cnt readHeap(v2) )]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))), newBarrier(cnt readHeap(v2) )]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))), fork((model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@6c8506ef;(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6c8506ef]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3))), fork((model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), model.statements.AwaitBarrierStatement@6c8506ef]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@522d857a;print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(model.statements.AwaitBarrierStatement@3b790e02;(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@522d857a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@3b790e02]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), model.statements.AwaitBarrierStatement@522d857a]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), model.statements.AwaitBarrierStatement@3b790e02]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newBarrier(cnt readHeap(v2) );(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))), newBarrier(cnt readHeap(v2) )]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))), newBarrier(cnt readHeap(v2) )]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))));(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))), fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3)))), fork((awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))));(awaitBarrier(cnt);print(readHeap(v3))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(awaitBarrier(cnt);(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitBarrier(cnt);print(readHeap(v3))), fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), awaitBarrier(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitBarrier(cnt);print(readHeap(v3))), fork((awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1))), awaitBarrier(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitBarrier(cnt);print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitBarrier(cnt);print(readHeap(v3)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[(writeHeap(v1, readHeap(v1)*10);print(readHeap(v1)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(awaitBarrier(cnt);(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), awaitBarrier(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), awaitBarrier(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3)), awaitBarrier(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1)), writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))), awaitBarrier(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2))), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[(writeHeap(v2, readHeap(v2)*10);print(readHeap(v2)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2)), writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [4, 20, 300]
----------
* fileTable={}
----------
* heap: {1=20, 2=300, 3=4}
----------


