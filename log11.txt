>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))), newLatch(cnt readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))), newLatch(cnt readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))), fork(writeHeap(v1, readHeap(v1)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))), fork(writeHeap(v1, readHeap(v1)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))), print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))), print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))), model.statements.CountDownLatchStatement@536278f8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))), model.statements.CountDownLatchStatement@536278f8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))), fork(writeHeap(v2, readHeap(v2)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))), fork(writeHeap(v2, readHeap(v2)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))), print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))), print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))), model.statements.CountDownLatchStatement@16b46a93]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))), model.statements.CountDownLatchStatement@16b46a93]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))), fork(writeHeap(v3, readHeap(v3)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))), fork(writeHeap(v3, readHeap(v3)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[writeHeap(v3, readHeap(v3)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[writeHeap(v3, readHeap(v3)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))), print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))), print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))), model.statements.CountDownLatchStatement@13152b64]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))), model.statements.CountDownLatchStatement@13152b64]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))), awaitLatch(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))), awaitLatch(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@1dbc9b48;print(100)), print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@1dbc9b48;print(100)), print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@1dbc9b48;print(100))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@1dbc9b48;print(100))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100), model.statements.CountDownLatchStatement@1dbc9b48]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100), model.statements.CountDownLatchStatement@1dbc9b48]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))), newLatch(cnt readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))), newLatch(cnt readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))), fork(writeHeap(v1, readHeap(v1)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))), fork(writeHeap(v1, readHeap(v1)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))), print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))), print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@680c8c65;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))), model.statements.CountDownLatchStatement@680c8c65]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))), model.statements.CountDownLatchStatement@680c8c65]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))), fork(writeHeap(v2, readHeap(v2)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))), fork(writeHeap(v2, readHeap(v2)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))), print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))), print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@52f8c40b;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))), model.statements.CountDownLatchStatement@52f8c40b]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))), model.statements.CountDownLatchStatement@52f8c40b]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))), fork(writeHeap(v3, readHeap(v3)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))), fork(writeHeap(v3, readHeap(v3)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[writeHeap(v3, readHeap(v3)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[writeHeap(v3, readHeap(v3)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))), print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))), print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@2be763c7;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))), model.statements.CountDownLatchStatement@2be763c7]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))), model.statements.CountDownLatchStatement@2be763c7]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))), awaitLatch(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100))), awaitLatch(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@3a026f69;print(100)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@3a026f69;print(100)), print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@3a026f69;print(100)), print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@3a026f69;print(100))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@3a026f69;print(100))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100), model.statements.CountDownLatchStatement@3a026f69]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100), model.statements.CountDownLatchStatement@3a026f69]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 30, 40, 100, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))), newLatch(cnt readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))), newLatch(cnt readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))), fork(writeHeap(v1, readHeap(v1)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))), fork(writeHeap(v1, readHeap(v1)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))), print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))), print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@536278f8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))), model.statements.CountDownLatchStatement@536278f8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))), model.statements.CountDownLatchStatement@536278f8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))), fork(writeHeap(v2, readHeap(v2)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))), fork(writeHeap(v2, readHeap(v2)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))), print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))), print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@16b46a93;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))), model.statements.CountDownLatchStatement@16b46a93]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))), model.statements.CountDownLatchStatement@16b46a93]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))), fork(writeHeap(v3, readHeap(v3)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))), fork(writeHeap(v3, readHeap(v3)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[writeHeap(v3, readHeap(v3)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[writeHeap(v3, readHeap(v3)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))), print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))), print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@13152b64;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))), model.statements.CountDownLatchStatement@13152b64]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))), model.statements.CountDownLatchStatement@13152b64]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))), awaitLatch(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100))), awaitLatch(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@1dbc9b48;print(100)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@1dbc9b48;print(100)), print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@1dbc9b48;print(100)), print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@1dbc9b48;print(100))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@1dbc9b48;print(100))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100), model.statements.CountDownLatchStatement@1dbc9b48]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100), model.statements.CountDownLatchStatement@1dbc9b48]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))), newLatch(cnt readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))), newLatch(cnt readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))), fork(writeHeap(v1, readHeap(v1)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))), fork(writeHeap(v1, readHeap(v1)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))), print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))), print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))), model.statements.CountDownLatchStatement@c11d061]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))), model.statements.CountDownLatchStatement@c11d061]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))), fork(writeHeap(v2, readHeap(v2)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))), fork(writeHeap(v2, readHeap(v2)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))), print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))), print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))), model.statements.CountDownLatchStatement@69d08bd8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))), model.statements.CountDownLatchStatement@69d08bd8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))), fork(writeHeap(v3, readHeap(v3)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))), fork(writeHeap(v3, readHeap(v3)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[writeHeap(v3, readHeap(v3)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[writeHeap(v3, readHeap(v3)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))), print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))), print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))), model.statements.CountDownLatchStatement@3dbac623]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))), model.statements.CountDownLatchStatement@3dbac623]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))), awaitLatch(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))), awaitLatch(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@ce8a2e2;print(100)), print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@ce8a2e2;print(100)), print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@ce8a2e2;print(100))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@ce8a2e2;print(100))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100), model.statements.CountDownLatchStatement@ce8a2e2]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100), model.statements.CountDownLatchStatement@ce8a2e2]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))), newLatch(cnt readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))), newLatch(cnt readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))), fork(writeHeap(v1, readHeap(v1)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))), fork(writeHeap(v1, readHeap(v1)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))), print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))), print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@c11d061;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))), model.statements.CountDownLatchStatement@c11d061]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))), model.statements.CountDownLatchStatement@c11d061]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))), fork(writeHeap(v2, readHeap(v2)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))), fork(writeHeap(v2, readHeap(v2)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))), print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))), print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@69d08bd8;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))), model.statements.CountDownLatchStatement@69d08bd8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))), model.statements.CountDownLatchStatement@69d08bd8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))), fork(writeHeap(v3, readHeap(v3)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))), fork(writeHeap(v3, readHeap(v3)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[writeHeap(v3, readHeap(v3)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[writeHeap(v3, readHeap(v3)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))), print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))), print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@3dbac623;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))), model.statements.CountDownLatchStatement@3dbac623]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))), model.statements.CountDownLatchStatement@3dbac623]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))), awaitLatch(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100))), awaitLatch(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@ce8a2e2;print(100)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@ce8a2e2;print(100)), print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@ce8a2e2;print(100)), print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@ce8a2e2;print(100))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@ce8a2e2;print(100))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100), model.statements.CountDownLatchStatement@ce8a2e2]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100), model.statements.CountDownLatchStatement@ce8a2e2]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))))))))))]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))))))))), Ref(int) v1]
----------
* symbolTable: 
{}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))))))), Ref(int) v2]
----------
* symbolTable: 
{v1=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(Ref(int) v3;(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))))))), Ref(int) v3]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(int cnt;(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))))))]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))))), int cnt]
----------
* symbolTable: 
{v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v1,2);(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))))), new(v1,2)]
----------
* symbolTable: 
{cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v2,3);(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))), new(v2,3)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(new(v3,4);(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))), new(v3,4)]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(newLatch(cnt readHeap(v2));(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))), newLatch(cnt readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))), newLatch(cnt readHeap(v2))]
----------
* symbolTable: 
{cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v1, readHeap(v1)*10));(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))), fork(writeHeap(v1, readHeap(v1)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))), fork(writeHeap(v1, readHeap(v1)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v1));(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[writeHeap(v1, readHeap(v1)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=2, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))), print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
2
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))), print(readHeap(v1))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: []
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@2a0fc6b8;(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))), model.statements.CountDownLatchStatement@2a0fc6b8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))), model.statements.CountDownLatchStatement@2a0fc6b8]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v2, readHeap(v2)*10));(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))), fork(writeHeap(v2, readHeap(v2)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))), fork(writeHeap(v2, readHeap(v2)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v2));(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[writeHeap(v2, readHeap(v2)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=3, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))), print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
3
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))), print(readHeap(v2))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@7c104ba3;(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))), model.statements.CountDownLatchStatement@7c104ba3]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))), model.statements.CountDownLatchStatement@7c104ba3]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(fork(writeHeap(v3, readHeap(v3)*10));(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))), fork(writeHeap(v3, readHeap(v3)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))), fork(writeHeap(v3, readHeap(v3)*10))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[writeHeap(v3, readHeap(v3)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(readHeap(v3));(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[writeHeap(v3, readHeap(v3)*10)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=4}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))), print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
4
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))), print(readHeap(v3))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@1a88929f;(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))), model.statements.CountDownLatchStatement@1a88929f]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))), model.statements.CountDownLatchStatement@1a88929f]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))), print(1)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(awaitLatch(cnt);(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))), awaitLatch(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100))), awaitLatch(cnt)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(print(100);(model.statements.CountDownLatchStatement@acbc8ec;print(100)))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@acbc8ec;print(100)), print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@acbc8ec;print(100)), print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@acbc8ec;print(100))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[(model.statements.CountDownLatchStatement@acbc8ec;print(100))]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100), model.statements.CountDownLatchStatement@acbc8ec]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100), model.statements.CountDownLatchStatement@acbc8ec]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[print(100)]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


>>> ProgramState: 
----------
* ID: 
1
----------
* exeStack: 
[]
----------
* symbolTable: 
{cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)}
----------
* out: [20, 1, 30, 1, 40, 1, 100, 100]
----------
* fileTable={}
----------
* heap: {1=20, 2=30, 3=40}
----------


